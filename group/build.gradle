plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'java'
}

group = 'org.ksushka'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

configurations {
    jaxb
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'wsdl4j:wsdl4j'
    jaxb 'org.glassfish.jaxb:jaxb-xjc'

    implementation 'org.glassfish.jaxb:jaxb-runtime'

    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.14.0-rc1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'build/generated-sources/jaxb'
        }
    }
}

task genJaxb {
    ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
    ext.schema = 'src/main/resources/schema.xsd'

    outputs.dir sourcesDir

    doLast() {
        project.ant {
            taskdef name: 'xjc', classname: 'com.sun.tools.xjc.XJCTask', classpath: configurations.jaxb.asPath
            mkdir dir: sourcesDir

            xjc(destdir: sourcesDir, schema: schema) {
                arg value: '-wsdl'
                produces dir: sourcesDir, includes: '**/*.java'
            }
        }
    }
}

compileJava.dependsOn genJaxb

tasks.named('test') {
    useJUnitPlatform()
}
